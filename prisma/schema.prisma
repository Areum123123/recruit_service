// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId       Int      @id @default(autoincrement())
  name         String   
  email        String   @unique
  password     String
  role         Role     @default(APPLICANT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

 refreshToken RefreshToken?
 resumes  Resume[]
 resumeLogs   ResumeLog[] @relation("RecruiterLogs")

  @@map("User")
}

enum Role{
APPLICANT
RECRUITER
}


model Resume {
  resumeId         Int      @id @default(autoincrement())
  UserId           Int 
  title            String   
  introduction     String @db.Text
  applyStatus      ApplyStatus @default(APPLY)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

 resumeLogs       ResumeLog[]
 user             User @relation(fields: [UserId], references: [userId], onDelete: Cascade )

  @@map("Resume")
}

enum ApplyStatus{

APPLY
DROP
PASS
INTERVIEW1
INTERVIEW2
FINAL_PASS

}

model RefreshToken {
tokenId         Int     @id @default(autoincrement()) 
UserId          Int     @unique  
refreshToken    String?  
 
createdAt DateTime @default(now()) 
updatedAt DateTime @updatedAt  
  

 user User @relation(fields:[UserId], references: [userId], onDelete:Cascade)

  @@map("RefreshToken")
  }

  model ResumeLog {
  resumeLogId       Int       @id @default(autoincrement())
  UserId            Int
  ResumeId          Int
  previousStatus    ApplyStatus
  newStatus         ApplyStatus
  reason            String
  createdAt         DateTime  @default(now())

  recruiter         User        @relation("RecruiterLogs", fields: [UserId], references: [userId])
  resume            Resume      @relation(fields: [ResumeId], references: [resumeId])
}